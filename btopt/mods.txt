Strategy Class (strategy.py):
a) Remove redundant attributes:

Remove _positions, _open_trades, _closed_trades, and _pending_orders.
b) Update order creation methods:

Simplify buy() and sell() to only create order requests.
Implement a new close() method that determines the appropriate order direction and uses buy() or sell()internally.
Remove add_stop_loss() and add_take_profit(). Replace with methods that request these actions from the Engine.
Update cancel() to request order cancellation from the Engine.
c) Update position and trade management:

Remove _update_position() and _handle_partial_fill() methods.
Update on_trade_update() to focus on strategy-specific logic.
Implement methods to request position and trade information from the Engine.
d) Update indicator management:

Modify add_indicator() to request indicator creation from the Engine.
Update get_indicator_output() to fetch data from the Engine if necessary.
e) Update risk management:

Remove calculate_position_size() and enforce_risk_limits().
Add get_position_size() to request position size calculation from the Portfolio via the Engine.
f) Update performance tracking:

Remove calculate_strategy_metrics().
Add get_performance_metrics() to request performance data from the Engine or Portfolio.
g) Update utility methods:

Modify get_current_position() to request data from the Engine.
Remove get_trades_for_strategy(), get_pending_orders(), and get_positions().
Replace with methods that request this information from the Engine.
h) Update abstract methods:

Keep on_data(), on_order_update(), and on_trade_update().
Remove on_partial_fill() method.
i) Update parameters management:

Modify the setter to notify the Engine of parameter changes.
j) Update logging:

Modify log() to send log messages to the Engine for centralized logging.
k) Remove local order and trade tracking:

Update on_order_update() and on_trade_update() to handle status changes without maintaining local storage.
l) Update position calculation and risk limits:

Add methods to request current positions and risk limit checks from the Engine or Portfolio.
m) Update error handling:

Modify error handling to use the Engine's logging system.
Remove StrategyError class if not used elsewhere.
n) Update representation:

Modify __repr__() to reflect the changes in the class structure.